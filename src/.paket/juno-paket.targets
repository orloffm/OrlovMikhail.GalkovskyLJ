<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
	<!-- Enable the .nupkg creation upon project build. -->
    <PackPackage Condition=" '$(PackPackage)' == '' ">false</PackPackage>
    <!-- Enable the install/restore command to run before builds -->
    <RestorePackages Condition=" '$(RestorePackages)' == '' ">true</RestorePackages>
    <!-- Download Paket.exe if it does not already exist -->
    <DownloadPaket Condition=" '$(DownloadPaket)' == '' ">true</DownloadPaket>
    
    <PaketToolsPath>$(MSBuildThisFileDirectory)</PaketToolsPath>
    <PaketRootPath>$(MSBuildThisFileDirectory)..\</PaketRootPath>
    <PaketOutputPath Condition=" '$(PaketOutputPath)' == '' ">$(PaketRootPath)..\..\nugets</PaketOutputPath>
  </PropertyGroup>
  
  <PropertyGroup>
	<!-- Paket bootstrapper -->
    <PaketBootStrapperExePath Condition=" '$(PaketBootStrapperExePath)' == '' ">$(PaketToolsPath)paket.bootstrapper.exe</PaketBootStrapperExePath>
    <PaketBootStrapperCommand>"$(PaketBootStrapperExePath)" $(PaketBootStrapperCommandArgs)</PaketBootStrapperCommand>
    <DownloadPaketCommand>$(PaketBootStrapperCommand)</DownloadPaketCommand>

    <!-- Paket -->
    <PaketExePath Condition=" '$(PaketExePath)' == '' ">$(PaketToolsPath)paket.exe</PaketExePath>
    <PaketCommand>"$(PaketExePath)"</PaketCommand>
    
    <!-- Commands -->
    <PaketReferences Condition="!Exists('$(MSBuildProjectFullPath).paket.references')">$(MSBuildProjectDirectory)\paket.references</PaketReferences>
    <PaketReferences Condition="!Exists('$(PaketReferences)')">$(MSBuildStartupDirectory)\paket.references</PaketReferences>
    <PaketReferences Condition="Exists('$(MSBuildProjectFullPath).paket.references')">$(MSBuildProjectFullPath).paket.references</PaketReferences>
    
    <!-- We restore or install depending on presence of paket.lock -->
    <RestoreCommand Condition="Exists('$(PaketRootPath)\paket.lock')">$(PaketCommand) restore --references-files "$(PaketReferences)"</RestoreCommand>
    <RestoreCommand Condition="!Exists('$(PaketRootPath)\paket.lock')">$(PaketCommand) install"</RestoreCommand>

    <!-- We need to ensure packages are restored prior to assembly resolve -->
    <BuildDependsOn Condition="$(RestorePackages) == 'true'">RestorePackages; $(BuildDependsOn);</BuildDependsOn>
  
    <!-- Command used to create NuGet packages -->
    <PackCommand>$(PaketCommand) pack output "$(PaketOutputPath)" buildplatform AnyCPU</PackCommand>
    
    <BuildDependsOn Condition="$(PackPackage) == 'true'">$(BuildDependsOn); PackPackage;</BuildDependsOn>

  </PropertyGroup>
  
  <Target Name="CheckPrerequisites">
    <!-- Raise an error if we're unable to locate paket.exe -->
    <Error Condition="'$(DownloadPaket)' != 'true' AND !Exists('$(PaketExePath)')" Text="Unable to locate '$(PaketExePath)'" />
    <MsBuild Targets="DownloadPaket" Projects="$(MSBuildThisFileFullPath)" Properties="Configuration=NOT_IMPORTANT;DownloadPaket=$(DownloadPaket)" />
  </Target>
  
  <Target Name="DownloadPaket">
    <Exec Command="$(DownloadPaketCommand)" IgnoreStandardErrorWarningFormat="true" Condition=" '$(DownloadPaket)' == 'true' AND !Exists('$(PaketExePath)')" />
  </Target>
  
  <Target Name="RestorePackages" DependsOnTargets="CheckPrerequisites">
    <Exec Command="$(RestoreCommand)" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(PaketRootPath)" Condition="Exists('$(PaketReferences)')" ContinueOnError="false" />
  </Target>
  
  <Target Name="PackPackage" DependsOnTargets="CheckPrerequisites">
	<MakeDir Directories="$(PaketOutputPath)"/>
    <Exec Command="$(PackCommand)" IgnoreStandardErrorWarningFormat="true" WorkingDirectory="$(ProjectDir)"/>
  </Target>
 
</Project>
